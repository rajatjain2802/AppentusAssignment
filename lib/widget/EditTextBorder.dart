
import 'package:appentus_assignment/res/AppColor.dart';
import 'package:appentus_assignment/res/Dimensions.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

Widget editTextBorder({
  Color txtColor = AppColor.white,
  Color hintColor = AppColor.white,
  Color cursorColor = AppColor.cursor,
  Color borderColor = AppColor.txtColorGray,
  Decoration decoration,
  TextInputType inputType = TextInputType.text,
  TextInputAction inputTypeAction = TextInputAction.done,
  bool autoFocus = false,
  double txtSize = Dimensions.txtSize13px,
  TextCapitalization textCapitalize = TextCapitalization.sentences,
  TextEditingController controller,
  ValueChanged<String> onSubmitted,
  ValueChanged<String> onChanged,
  Widget suffixIcon = null,
  Widget prefixIcon = null,
  FocusNode focus,
  List<TextInputFormatter> formatters,
  EdgeInsetsGeometry margin = const EdgeInsets.fromLTRB(0, 0, 0, 0),
  EdgeInsetsGeometry contentPadding = const EdgeInsets.all(10),
  TextAlign align = TextAlign.start,
  double cornerRadius = 2,
  AutovalidateMode mode = AutovalidateMode.disabled,
  double cardCornerRadius=2,
  double elevation = 1,
  int minLines = 1,
  int maxlength = 1000,
  String prefixText = null,
  Color bgColor = AppColor.white,
  String hint = '',
  double cursorWidth = 1,
  VoidCallback onClick,
  String Function(String) validator,
  bool obscureText = false,
  bool clickableOnly = false,
}) {
  return Container(
    decoration:decoration ,
    child: TextFormField(
      controller: controller != null ? controller : TextEditingController(),
      keyboardType: inputType,
      textInputAction: inputTypeAction,
      autofocus: autoFocus,
      autovalidateMode: mode,
      textAlign: align,
      obscureText: obscureText,
      focusNode: focus != null ? focus : new FocusNode(),
      decoration: InputDecoration(
        suffixIcon: suffixIcon,
        prefixIcon: prefixIcon,
        border: InputBorder.none,
        contentPadding: contentPadding,
        counterText: '',
        hintText: hint,
        hintStyle: TextStyle(
          color: hintColor,
          fontSize: txtSize,
          fontFamily: 'sfaFont',
        ),
      ),
      cursorColor: cursorColor,
      cursorWidth: cursorWidth,
      enableInteractiveSelection: true,
      style: TextStyle(
        color: txtColor,
        fontSize: txtSize,
        fontFamily: 'OpenSans',
      ),
      textCapitalization: textCapitalize,
      onSaved: onSubmitted,
      validator:validator ,
      onChanged: onChanged,
      maxLength: maxlength,
      inputFormatters: formatters != null ? formatters : [],
      minLines: minLines,
      maxLines: minLines,
      onTap: onClick,
      readOnly: clickableOnly,
    ),
  );
}
